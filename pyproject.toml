[tool.poetry]
name = "ai_assistant"
version = "0.0.2"
authors = [
    "Anand <anand1911991@outlook.com>",
]
description = "Template repo for building GenAI applications"
readme = "README.md"
repository = "https://github.com/Anand191/terraform_tutorial.git"
packages = [
    {include = "ai_assistant"}
]
exclude = ["tests*"]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
pyyaml = "^6.0.2"
pandas = "^2.2.2"
pandera = "^0.20.4"
numpy = "^1.26.4"
loguru = "^0.7.2"
pydantic = "^2.9.2"
pydantic-settings = "^2.5.2"
python-dotenv = "^1.0.1"
functions-framework = "3.3.0"
openpyxl = "^3.1.2" # used by the logging library
tqdm = "^4.66.5"
sentence-transformers = "^2.4.0"
transformers = "^4.44.2"
datasets = "^2.14.7"
lightning = "^2.4.0"
torchmetrics = "^1.4.1"
redis = "^5.0.8"
chromadb = "^0.5.5"
openai = "^1.59.5"
dspy-ai = "^2.5.43"
langchain = "^0.3.14"
langchain-core = "^0.3.29"
langchain-openai = "^0.2.14"
langchain-google-vertexai = "^2.0.7"
langchain-community = "^0.3.14"
fastapi = "^0.114.0"
uvicorn = "^0.29.0"
pypdf2 = "^3.0.1"
geopy = "^2.4.1"
typer = "^0.15.1"
google-auth = "^2.37.0"
google-cloud-discoveryengine = "^0.13.5"
googleapis-common-protos = "^1.66.0"
vertexai = "^1.71.1"
azure-identity = "^1.19.0"
azure-keyvault = "^4.2.0"
opentelemetry-exporter-otlp-proto-grpc = "1.25.0"
google-api-python-client = "^2.157.0"
google-auth-httplib2 = "^0.2.0"
google-auth-oauthlib = "^1.2.1"
google-cloud-storage = "^2.19.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-watch = "^4.2.0"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.6.1"
pytest-mock = "^3.14.0"
joblib = "^1.4.2"
pylint = "^3.2.7"
black = "^24.8.0"
isort = "^5.13.2"
flake8 = "^7.1.1"
deptry = "^0.20.0"
ruff = "^0.8.6"

[tool.poetry.group.experimentation]
optional = true

[tool.poetry.group.experimentation.dependencies]
jupyterlab = "^4.3.4"
tabulate = "^0.9.0"
ipywidgets = "^8.1.5"
google-cloud-aiplatform = "^1.71.0"
google-cloud-documentai = "^3.1.0"
ragas = "^0.2.10"
unstructured = {extras = ["md", "pdf"], version = "^0.16.12"}


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers -m 'not integration and not redis'"
markers = [
    "integration: mark test as integration test" ,
    "redis: mark test as redis based"
]

[tool.deptry]
ignore = ["DEP004"]
ignore_notebooks = true
extend_exclude = ["src"]

[tool.deptry.per_rule_ignores]
DEP002 = ["openpyxl"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "models",
    "data",
    "notebooks",
    "logs",
    "assets",
    # this is only temporary
    "src"
]

line-length = 110
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I"]
ignore = ["E731"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
